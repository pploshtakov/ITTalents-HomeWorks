package driver;

import java.util.Random;

import gasStation.GasStation;
import vehicles.Vehicle;
import vignette.Vignette;

public class Driver {
	public static final String[] NAMES = { "Pesho", "Gosho", "Iva", "Tedi", "Miro", "Liubo", "Ivo", "Ivan", "Joro",
			"Simo", "Mihaela", "Milko", "Vanq", "Ralica", "Desi" };
	private String name;
	private int money;
	private Vehicle[] vehicles;
	public int freePlacesForVehicle;
	private GasStation currentStation;

	public Vehicle[] getVehicles() {
		return vehicles;
	}

	public Driver(String name, int money, GasStation currentStation) {
		// TODO validation
		this.name = name;
		this.money = money;
		this.currentStation = currentStation;
		this.vehicles = new Vehicle[10];
		this.freePlacesForVehicle = vehicles.length;
	}

	// auto genarate drivers
	public static Driver autoGenarateDriver() {
		// TODO
		return null;
	}

	// random names
	public static String randomName() {
		return (NAMES[new Random().nextInt(NAMES.length)]);
	}

	public void setVehicle(Vehicle x) {
		if (this.freePlacesForVehicle > 0) {
			this.vehicles[freePlacesForVehicle - 1] = x;
			this.freePlacesForVehicle--;
		} else {
			System.out.println("No free places for vehicle!");
		}
	}

	public void buyVignetteForAllVihecles() {
		for (int i = 0; i < this.vehicles.length; i++) {
			this.buyVignette(i);
		}
	}

	public void buyVignette(int numberOfVehicle) {
		if (this.vehicles[numberOfVehicle].getVignette() == null && this.money > 0) {
			Vignette vignette = this.currentStation.buyVignette(this.vehicles[numberOfVehicle].getType(),
					(Vignette.VALIDITY[new Random().nextInt(Vignette.VALIDITY.length)]));
			if (this.money >= vignette.getPrice()) {
				this.vehicles[numberOfVehicle].setVignette(vignette);
				this.money -= vignette.getPrice();
			} else {
				System.out.println("No more money!");
			}
		}

	}

	public void buyVignetteForRandomVihecles() {
		Random random = new Random();
		int randomIndex = random.nextInt(this.vehicles.length);
		while (this.vehicles[randomIndex].getVignette() != null) {
			randomIndex = random.nextInt(this.vehicles.length);
		}
		this.buyVignette(randomIndex);
	}

	public void printInfoForDriver() {
		System.out.println(this.name + " has " + this.money + "BGN");
		for (int i = 0; i < vehicles.length; i++) {
			System.out.println("For " + vehicles[i].getType());
			if (vehicles[i].getVignette() == null) {
				System.out.println("Invalid vignette!");
			} else {
				System.out.println(this.vehicles[i].getVignette().getValidity());
				System.out.println("Expiry day " + this.vehicles[i].getVignette().getExpiryDate());
			}
		}

	}

}
